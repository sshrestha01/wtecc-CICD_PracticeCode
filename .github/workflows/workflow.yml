

Step 4: Test Code Coverage with nosetests

You will use nose in this step to unit test the source code. Nose is configured via the included setup.cfg file to automatically include the flags –with-spec and –spec-color so that red-green-refactor is meaningful. If you are in a command shell that supports colors, passing tests will be green and failing tests will be red.

Nose is also configured to automatically run the coverage tool, and you should see a percentage of coverage report at the end of your tests.
Your Task

    Add a new named step after the Lint with flake8 step. Call this step Run unit tests with nose.
    Click here for a hint.

    Next, you want to run the nosetests command to test your code and report on code coverage.

        1
        nosetests -v --with-spec --spec-color --with-coverage --cover-package=app

    Since you are running a single command, you do not have to use the pipe | operator with run.
    Click here for a hint.

Double-check that your work matches the solution below.
Solution
Click here for the answer.
Replace the workflow.yml file with the code snippet below. You can also copy relevant parts of the code. Be sure to indent properly:

    1
    2
    3
    4
    5
    6
    7
    8
    9
    10
    11
    12
    13
    14
    15
    16
    17
    18
    19
    20
    21
    22
    23
    24
    25
    26
    27
    28

    name: CI workflow
    on:
      push:
        branches: [ "main" ]
      pull_request:
        branches: [ "main" ]
    jobs:
      build:
        runs-on: ubuntu-latest
        container: python:3.9-slim
        steps:
          - name: Checkout
            uses: actions/checkout@v3
          - name: Install dependencies
            run: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt
          - name: Lint with flake8
            run: |
              flake8 service --count --select=E9,F63,F7,F82 --show-source --statistics
              flake8 service --count --max-complexity=10 --max-line-length=127 --statistics
          - name: Run unit tests with nose
            run: nosetests -v --with-spec --spec-color --with-coverage --cover-package=app

